# Properties file which configures the operation of the JDK 
# logging facility.

# The system will look for this config file, first using 
# a System property specified at startup: 
# 
# >java -Djava.util.logging.config.file=myLoggingConfigFilePath 
# 
# If this property is not specified, then the config file is 
# retrieved from its default location at: 
# 
# JDK_HOME/jre/lib/logging.properties

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
# handlers=java.util.logging.ConsoleHandler
handlers=java.util.logging.FileHandler

# Default global logging level. 
# Loggers and Handlers may override this level 
.level=INFO

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
# com.google.bitcoin.tools.Miner.level=ALL 
# com.google.bitcoin.core.Peer.level=ALL
# com.google.bitcoin.core.PeerGroup.level=ALL
# myapp.business.level=CONFIG 
# myapp.data.level=SEVERE

# Handlers 
# -----------------------------------------

# --- ConsoleHandler --- 
# Override of global logging level 
# java.util.logging.ConsoleHandler.level=ALL 
# java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler --- 
# Override of global logging level 
# java.util.logging.FileHandler.level=ALL 
java.util.logging.FileHandler.pattern = logs/node1.log
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter

